@using Microsoft.AspNetCore.Identity
@using StoreModels
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li><a class="navbar-brand" asp-area="" asp-controller="Location" asp-action="Index">Location</a></li>
        <li><a class="navbar-brand" asp-area="" asp-controller="Product" asp-action="Index">Product</a></li>
        <li><a class="navbar-brand" asp-area="" asp-controller="Customer" asp-action="Index">Customer</a></li>
        <li><a class="navbar-brand" asp-area="" asp-controller="Order" asp-action="Index">Order</a></li>
        <!--<li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-white">Logout</button>
            </form>
        </li>-->

        <li class="nav-item">
            <a id="manage" class="nav-link text-white float-left" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
        </li>

        <li>
            <form class="form-inline my-2 my-lg-0" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button class="btn btn-outline-success my-2 my-sm-0 text-white" type="submit">Logout</button>
            </form>
        </li>

    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-white" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-white" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
